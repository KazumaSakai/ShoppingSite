package com.internousdev.ShoppingSite.dao;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import com.internousdev.ShoppingSite.dto.ItemSalesDTO;
import com.internousdev.ShoppingSite.util.DBConnector;

public class ItemSalesDAO
{
	public static boolean AddSalesData(int item_id, int quantity)
	{
		String select_sql = "SELECT COUNT(*) FROM sales WHERE item_id = ? AND year = ? AND month = ? FOR UPDATE";
		String update_sql = "UPDATE sales SET quantity = quantity + ? WHERE item_id = ? AND year = ? AND month = ?";
		String commit = "COMMIT";

        Calendar calendar = Calendar.getInstance();
		Date date = calendar.getTime();
		int year = date.getYear();
		int month = date.getMonth();
		
		try
		{
			PreparedStatement preparedStatement = DBConnector.connection().prepareStatement(sql);
			preparedStatement.setInt(1, item_id);
			preparedStatement.setInt(2, year);
			preparedStatement.setInt(3, month);
			ResultSet resultSet = preparedStatement.executeQuery();
			
			if(resultSet.next())
			{
				int i = resultSet.getInt(1);
				
				if(i > 0)
				{
					PreparedStatement preparedStatement2 = DBConnector.connection().prepareStatement(update_sql);
				}
			}
		}
		catch (SQLException e)
		{
			e.printStackTrace();
		}
	}
	
	public static List<ItemSalesDTO> GetItemSales(int item_id)
	{
		List<ItemSalesDTO> list = new ArrayList<ItemSalesDTO>();
		
		String sql = "SELECT * FROM sales WHERE item_id = ? ORDER BY year, month";
		
		try
		{
			PreparedStatement preparedStatement = DBConnector.connection().prepareStatement(sql);
			preparedStatement.setInt(1, item_id);
			
			int price = ItemDAO.GetItem(item_id).getItem_price();
			
			ResultSet resultSet = preparedStatement.executeQuery();
			
			while (resultSet.next())
			{
				ItemSalesDTO dto = new ItemSalesDTO();
				dto.setItem_id(resultSet.getInt("item_id"));
				dto.setYear(resultSet.getInt("year"));
				dto.setMonth(resultSet.getInt("month"));
				dto.setQuantity(resultSet.getInt("quantity"));
				dto.setPrice(dto.getQuantity() * price);
				list.add(dto);
			}
		}
		catch (SQLException e)
		{
			e.printStackTrace();
		}
		
		return list;
	}
}
